[
    // Robert Olson
    {
        "command": "lsp_symbol_definition",
        "keys": [
            "ctrl+shift+g"
        ],
        // "context": [
        //     {
        //         "key": "selector",
        //         "operator": "equal",
        //         "operand": "source.python"
        //     }
        // ]
    },
    // BEGIN LSP COMMANDS
    {
        "keys": [
            "f2"
        ],
        "command": "show_overlay",
        "args": {
            "overlay": "command_palette",
            "text": "LSP: ",
        },
    },
    // Show function signature
    {
        "keys": [
            "ctrl+shift+space",
        ],
        "command": "lsp_signature_help_show",
    },
    {
        "keys": [
            "f1"
        ],
        "command": "lsp_signature_help_show",
    },
    {
        "command": "lsp_document_symbols",
        "keys": [
            "ctrl+r"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "workspaceSymbolProvider"
            }
        ]
    },
    {
        "command": "lsp_symbol_rename",
        "keys": [
            "ctrl+shift+d"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "renameProvider"
            }
        ]
    },
    // END LSP COMMANDS

    // Select All Left
    {
        "keys": [
            "shift+ctrl+h"
        ],
        "command": "move_to",
        "args": {
            "to": "bol",
            "extend": true
        }
    },
    // Move Cursor to End of Line
    {
        "keys": [
            "ctrl+e",
            "ctrl+e"
        ],
        "command": "move_to",
        "args": {
            "to": "eol",
            "extend": false
        }
    },
    {
        "keys": [
            "ctrl+e",
            "ctrl+d"
        ],
        "command": "move_to",
        "args": {
            "to": "eol",
            "extend": false
        }
    },
    {
        "keys": [
            "ctrl+e",
            "ctrl+l"
        ],
        "command": "move_to",
        "args": {
            "to": "eol",
            "extend": false
        }
    },
    // Select All Right
    {
        "keys": [
            "shift+ctrl+l"
        ],
        "command": "move_to",
        "args": {
            "to": "eol",
            "extend": true
        }
    },

    // expand scope mathematica style
    // expand scope by tabs
    // {
    //     "keys": [
    //         "ctrl+shift+."
    //     ],
    //     "command": "narrow_selection"
    // },
    // // Expand Selection (a replacement for ST's "Expand Selection")
    // {
    //     "command": "lsp_expand_selection",
    //     "keys": [
    //         "ctrl+."
    //     ],
    //     "context": [
    //         {
    //             "key": "lsp.session_with_capability",
    //             "operator": "equal",
    //             "operand": "selectionRangeProvider"
    //         }
    //     ]
    // },
    // !! Had to rename custom command'better_expand_selection'
    // !! to 'next_modification' so it would play nice with LSP
    // { "keys": ["ctrl+."], "command": "next_modification" },
    // go to next modification (opposite of ctrl+,)

    // {
    //     "keys": [
    //         "ctrl+,"
    //     ],
    //     "command": "next_modification"
    // },
    // {
    //     "keys": [
    //         "ctrl+shift+,"
    //     ],
    //     "command": "prev_modification"
    // },
    // make a new snippet
    {
        "keys": [
            "ctrl+alt+n"
        ],
        "command": "new_snippet"
    },
    {
        "keys": [
            "ctrl+alt+d"
        ],
        "command": "clone_file"
    },
    // snippet shortcut template
    // { "keys": ["ctrl+1"], "command": "insert_snippet", "args": {"name": "Packages/User/myFunction.sublime-snippet"} }
    {
        "keys": [
            "j",
            "j"
        ],
        "command": "_enter_normal_mode",
        "args": {
            "mode": "mode_insert"
        },
        "context": [
            {
                "key": "vi_insert_mode_aware"
            }
        ]
    },
    {
        "keys": [
            "k",
            "k"
        ],
        "command": "_enter_normal_mode",
        "args": {
            "mode": "mode_insert"
        },
        "context": [
            {
                "key": "vi_insert_mode_aware"
            }
        ]
    },
    {
        "keys": [
            "ctrl+shift+a"
        ],
        "command": "toggle_setting",
        "args": {
            "setting": "auto_complete"
        }
    },
    {
        "keys": [
            "alt+shift+w"
        ],
        "command": "",
    },
    {
        "keys": [
            "alt+c"
        ],
        "command": "show_at_center",
    },
    // make ctrl+up/down do page up/down
    // (normally it scrolls the page w/out moving cursor)
    // { "keys": ["ctrl+up"], "command": "move", "args": {"by": "pages", "forward": false} },
    // { "keys": ["ctrl+down"], "command": "move", "args": {"by": "pages", "forward": true} },
    // Swap Behavior of switching tabs with CTRL+Tab
    {
        "keys": [
            "ctrl+tab"
        ],
        "command": "next_view"
    },
    {
        "keys": [
            "ctrl+shift+tab"
        ],
        "command": "prev_view"
    },
    // Move through tabs with wasd
    {
        "keys": [
            "alt+d"
        ],
        "command": "next_view"
    },
    {
        "keys": [
            "alt+a"
        ],
        "command": "prev_view"
    },
    {
        "keys": [
            "alt+w"
        ],
        "command": "focus_neighboring_group",
        "args": {
            "forward": false
        }
    },
    {
        "keys": [
            "alt+s"
        ],
        "command": "focus_neighboring_group",
        "args": {
            "forward": true
        }
    },
    // { "keys": ["ctrl+shift+d"], "command": "select_all_exact_matches" },
    {
        "keys": [
            "ctrl+shift+e"
        ],
        "command": "select_all_exact_matches"
    },
    // Move cursor by paragraph
    {
        "keys": [
            "ctrl+alt+["
        ],
        "command": "move",
        "args": {
            "by": "stops",
            "empty_line": true,
            "forward": false
        }
    },
    {
        "keys": [
            "ctrl+alt+]"
        ],
        "command": "move",
        "args": {
            "by": "stops",
            "empty_line": true,
            "forward": true
        }
    },
    {
        "keys": [
            "ctrl+alt+shift+["
        ],
        "command": "move",
        "args": {
            "by": "stops",
            "empty_line": true,
            "extend": true,
            "forward": false
        }
    },
    {
        "keys": [
            "ctrl+shift+alt+]"
        ],
        "command": "move",
        "args": {
            "by": "stops",
            "empty_line": true,
            "extend": true,
            "forward": true
        }
    },
    // Move cursor by paragraph
    {
        "keys": [
            "ctrl+up"
        ],
        "command": "move",
        "args": {
            "by": "stops",
            "empty_line": true,
            "forward": false
        }
    },
    {
        "keys": [
            "ctrl+down"
        ],
        "command": "move",
        "args": {
            "by": "stops",
            "empty_line": true,
            "forward": true
        }
    },
    {
        "keys": [
            "ctrl+shift+up"
        ],
        "command": "move",
        "args": {
            "by": "stops",
            "empty_line": true,
            "extend": true,
            "forward": false
        }
    },
    {
        "keys": [
            "ctrl+shift+down"
        ],
        "command": "move",
        "args": {
            "by": "stops",
            "empty_line": true,
            "extend": true,
            "forward": true
        }
    },
    // Move entire lines around
    {
        "keys": [
            "ctrl+k"
        ],
        "command": "swap_line_up"
    },
    {
        "keys": [
            "ctrl+j"
        ],
        "command": "swap_line_down"
    },
    // Move cursor to end of line
    {
        "keys": [
            "alt+right+4"
        ],
        "command": "move_to",
        "args": {
            "to": "hardeol",
            "extend": false
        }
    },
    {
        "keys": [
            "alt+right+6"
        ],
        "command": "move_to",
        "args": {
            "to": "hardbol",
            "extend": false
        }
    },
    {
        "keys": [
            "alt+shift+right+4"
        ],
        "command": "move_to",
        "args": {
            "to": "hardeol",
            "extend": true
        }
    },
    {
        "keys": [
            "alt+shift+right+6"
        ],
        "command": "move_to",
        "args": {
            "to": "hardbol",
            "extend": true
        }
    },
    {
        "keys": [
            "alt+ctrl+g"
        ],
        "command": "move_to",
        "args": {
            "to": "hardbol",
            "extend": false
        }
    },
    {
        "keys": [
            "alt+ctrl+;"
        ],
        "command": "move_to",
        "args": {
            "to": "hardeol",
            "extend": false
        }
    },
    {
        "keys": [
            "alt+ctrl+shift+g"
        ],
        "command": "move_to",
        "args": {
            "to": "hardbol",
            "extend": true
        }
    },
    {
        "keys": [
            "alt+ctrl+shift+;"
        ],
        "command": "move_to",
        "args": {
            "to": "hardeol",
            "extend": true
        }
    },
    {
        "keys": [
            "alt+g"
        ],
        "command": "move",
        "args": {
            "by": "words",
            "empty_line": true,
            "forward": false
        }
    },
    {
        "keys": [
            "alt+;"
        ],
        "command": "move",
        "args": {
            "by": "words",
            "empty_line": true,
            "forward": true
        }
    },
    {
        "keys": [
            "ctrl+shift+c"
        ],
        "command": "toggle_fold_comments"
    },

    { "keys": ["ctrl+."], "command": "expand_region" },
    {
      "keys": ["ctrl+shift+."],
      "command": "expand_region",
      "args": {"undo": true},
      "context": [{ "key": "expand_region_soft_undo" }]
    },

    // Move cursor within selection
    { "keys": ["alt+1"], "command": "move_cursor_to_tenth_in_selection", },

    { "keys": ["alt+2"], "command": "move_cursor_to_twentieth_in_selection",  },
    { "keys": ["alt+3"], "command": "move_cursor_to_thirtieth_in_selection",  },
    { "keys": ["alt+4"], "command": "move_cursor_to_fortieth_in_selection",  },
    { "keys": ["alt+5"], "command": "move_cursor_to_fiftieth_in_selection",  },
    { "keys": ["alt+m"], "command": "move_cursor_to_fiftieth_in_selection",  },
    { "keys": ["alt+6"], "command": "move_cursor_to_sixtieth_in_selection",  },
    { "keys": ["alt+7"], "command": "move_cursor_to_seventieth_in_selection",  },
    { "keys": ["alt+8"], "command": "move_cursor_to_eightieth_in_selection",  },
    { "keys": ["alt+9"], "command": "move_cursor_to_ninetieth_in_selection", },
    { "keys": ["alt+0"], "command": "move_to", "args": {"to": "eol", "extend": false} },
    { "keys": ["alt+shift+0"], "command": "move_to", "args": {"to": "eol", "extend": true} },
// </Move Cursor Within Selection>
    {
        "keys": ["alt+i"],
        "command": "ace_jump_within_line"
    },
    {
        "keys": ["alt+n"],
        "command": "ace_jump_char"
    },
    {
        "keys": ["alt+space"],
        "command": "ace_jump_space"
    },
    {
        "keys": ["alt+["],
        "command": "ace_jump_left_bracket"
    },
    {
        "keys": ["alt+]"],
        "command": "ace_jump_right_bracket"
    },
    { "keys": ["alt+9"], "command": "ace_jump_left_bracket", },
    { "keys": ["alt+0"], "command": "ace_jump_right_bracket"},
    { "keys": ["alt+,"], "command": "ace_jump_special"},
    { "keys": ["alt+."], "command": "ace_jump_special"},
    { "keys": ["alt+'"], "command": "ace_jump_quote"},
    { "keys": ["ctrl+shift+s"], "command": "black",
    "context": [
            {
                "key": "selector",
                "operator": "equal",
                "operand": "source.python"
            }
        ]},


]
